https://contest.yandex.ru/contest/25622/problems/

__A
package main

import (
	"fmt"
	"math"
	"unicode/utf8"
)

func main() {
	var text string

	fmt.Scan(&text)

	sum := float64(utf8.RuneCountInString(text)) * 0.23

	intPart, fractPart := math.Modf(sum)
	//fmt.Println(intpart)
	//fmt.Println(div)

	intP, fractP := int64(intPart), int64(fractPart * 100)

	// v1
	//if intPart > 1 {
	//	fmt.Printf("%.0f р. %.0f коп.", intPart, fractPart * 100)
	//	return
	//}
	//fmt.Printf("%.0f коп.", fractPart * 100)

	// v2
	if intPart > 1 {
		fmt.Printf("%d р. %d коп.", intP, fractP)
		return
	}
	fmt.Printf("%d коп.", fractP)
}


__B
package main

import (
	"fmt"
	"math"
)

func main() {
	var a, b, c float64

	fmt.Scan(&a, &b, &c)

	if a != 0 {
		discr := math.Pow(b, 2) - 4 * a * c

		if discr > 0 {
			fmt.Println("два корня")
		} else if discr == 0 {
			fmt.Println("один корень")
		} else {
			fmt.Println("корней нет")
		}
	} else {
	    // ax + b = 0
		if b != 0 {
			fmt.Println("один корень")
		} else {
			fmt.Println("корней нет")
		}
	}
}


__C
package main

import "fmt"

func main() {
	var line string

	for {
		fmt.Scan(&line)

		if line == "0" {
			break
		}
		fmt.Println(line)
	}
}


__D
package main

import (
	"fmt"
)

// bufio. Выход после 2-й пустой строки.
//func main() {
//	reader := bufio.NewReader(os.Stdin)
//	var wasEmptyLine bool
//
//	for {
//		text, _ := reader.ReadString('\n')
//		text = strings.Replace(text, "\n", "", -1)
//
//		if wasEmptyLine {
//			fmt.Println("")
//			break
//		} else {
//			if text == "" {
//				wasEmptyLine = true
//				fmt.Println("")
//				continue
//			}
//			fmt.Println(text)
//		}
//	}
//}

// bufio. Выход после 1-й пустой строки.
//func main() {
//	reader := bufio.NewReader(os.Stdin)
//
//	for {
//		text, _ := reader.ReadString('\n')
//		text = strings.Replace(text, "\n", "", -1)
//
//		if text == "" {
//			break
//		}
//		fmt.Println(text)
//	}
//}

// Scanln. Выход после 1-й пустой строки.
func main() {
	var line string

	for {
		_, err := fmt.Scanln(&line)
		if err != nil {
			//fmt.Println(err)
			return
		}
		fmt.Println(line)
	}
}


__E
package main

import (
	"fmt"
	"strings"
	"unicode/utf8"
)

func main() {
	var pass1, pass2 string

	for {
		fmt.Scan(&pass1, &pass2)

		if utf8.RuneCountInString(pass1) < 8 {
			fmt.Println("Слишком короткий пароль!")
			continue
		} else if strings.Contains(pass1, "123") || strings.Contains(pass1, "qwe") {
			fmt.Println("Слишком простой пароль!")
			continue
		} else if strings.Compare(pass1, pass2) != 0 {
			fmt.Println("Введенные пароли различаются!")
		}
		fmt.Println("Ну наконец-то!")
		break
	}
}


__F



__G
package main

import "fmt"

func main() {
	var (
		pulse, minPulse, maxPulse float64
		accepted int
	)

	outer:
		for {
			fmt.Scan(&pulse)

			switch {
			case pulse < 0:
				fmt.Println(accepted)
				fmt.Printf("%0.1f %0.1f", minPulse, maxPulse)
				break outer
			case pulse >= 100 && pulse <= 140:
				accepted += 1

				if pulse > maxPulse {
					maxPulse = pulse
				}

				if minPulse == 0 {
					minPulse = pulse
				}

				if pulse < minPulse {
					minPulse = pulse
				}
			}
		}

}


__H



__I
package main

import "fmt"

func main() {
	var num, divCount int

	fmt.Scan(&num)

	for i := 1; i <= num; i++ {
		if num % i == 0 {
			fmt.Printf("%d ", i)
			divCount++
		}
	}

	if divCount == 2 {
		fmt.Print("\n", "ACHTUNG")
	}
}


__J
package main

import (
	"fmt"
	"math"
)

func main() {
	var num float64

	fmt.Scan(&num)

	for i := -num; i <= math.Abs(num) ; i++ {
		if i != 0 {
			fmt.Printf("Квадрат числа %.0f равен %0.f\n", i, math.Pow(i, 2))
		} else {
			fmt.Println("Квадрат числа 0 равен 0")
		}
	}
}


__K



__L
package main

import "fmt"

func main() {
	var numCount, sum int

	fmt.Scan(&numCount)

	for i := 1; i <= numCount; i++ {
		var num int
		fmt.Scan(&num)

		if i % 2 == 0 {
			sum -= num
		} else {
			sum += num
		}
	}
	fmt.Println(sum)
}


__M

