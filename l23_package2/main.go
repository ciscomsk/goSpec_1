package main

// cd l23_package2 && go mod init l23_package2
import (
	"fmt"
	_ "l23_package2/circle" // _ "package" - пакет будет инициализирован (выполнится init), даже если не используется
	"l23_package2/rectangle"
)

// Функция init() - отрабатывает при первом импортировании пакета. Функций init в пакете - может быть несколько,
// но в разных модулях - т.к. в одном модуле невозможно создать две функции с одинаковым именем.
// Init вызывается в момент инициализации пакета.

// Алгоритм работы:
// 1. Компилятор проверяет синтаксическую корректность main.go.
// 2. Компилятор проверяет пути импорта (если что-то импортируется - компилятор уходит туда).
// 3. Компилятор проверяет синтаксическую корректность импортируемого пакета.
// 4. Компилятор инициализирует переменные уровня импортируемого пакета.
// 5. Компилятор выполянет функцию init() импортируемого пакета.
// 6. Компилятор подгружает (определяяет) остальные имена импортируемого пакета.
// 7. Повторение 3-6 для всех импортируемых пакетов проекта.
// 8. Компилятор инициализирует переменные уровня пакета main.
// 9. Компилятор выполянет функцию init() пакета main.
// 10. Компилятор подгружает (определяяет) остальные имена пакета main.
// 11. Вызов функции main()

// Все импорты (вне зависимости - стандартные или пользовательские) - сортируются по алфавиту.

var (
	name string = "Bob"
	age  int    = 99
)

func init() {
	fmt.Println("Init function for main package!")
	fmt.Println("Name:", name, "Age:", age)
}

func main() {
	r := rectangle.New(10, 10)
	fmt.Println(r)

	//c := circle.New(22.5)
	//fmt.Println(c)
}
