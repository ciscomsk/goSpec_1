package main

import "fmt"

// Функция newGoRoutine() будет запущена в качестве горутины.
// !!! Горутины никогда ничего не возвращают через явное использование return. Для возврата значений - используются каналы.
// return - терминирует горутину.
func newGoRoutine() {
	fmt.Println("Hey, I'm new Goroutine!")
}

// Функция main - особенная горутина. Если main завершается - остальные горутины завершаются сразу.
func main() {
	// Происходит формирование запроса на вызов функции в отдельной горутине.
	// Код основной горутины main продолжает выполняться и не ожидает завершения newGoRoutine().
	go newGoRoutine()
	fmt.Println("Main Goroutine work!")

	// !!! Не увидим "Hey, I'm new Goroutine!" т.к. горутина main завершилась быстрее, чем отработала горутина newGoRoutine()
}

// Варианты оркестрации горутин:
// 1. Каналы
// 2. WaitGroup - пример использования - параллельная проверка независимых условий - база доступна/порты свободны/...
// 3. Мьютекс (основное назначение - защита данных).

// Select - вспомогательный инструмент, используется в связке с каналами/waitGroup
